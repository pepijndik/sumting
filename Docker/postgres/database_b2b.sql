create role  postgres  login ;
ALTER   ROLE   postgres   WITH   SUPERUSER;
create table if not exists auth_group
(
    id   integer      not null
        constraint auth_group_pkey
            primary key,
    name varchar(150) not null
        constraint auth_group_name_key
            unique
);

create index if not exists auth_group_name_a6ea08ec_like
    on auth_group (name varchar_pattern_ops);

create table if not exists auth_permission
(
    id              integer generated always as identity
        constraint auth_permission_pkey
            primary key,
    name            varchar(255) not null,
    content_type_id integer      not null,
    codename        varchar(100) not null
);

create table if not exists auth_group_permissions
(
    id            bigint  not null
        constraint auth_group_permissions_pkey
            primary key,
    group_id      integer not null
        constraint auth_group_permissions_group_id_b120cbf9_fk_auth_group_id
            references auth_group
            deferrable initially deferred,
    permission_id integer not null
        constraint auth_group_permissio_permission_id_84c5c92e_fk_auth_perm
            references auth_permission
            deferrable initially deferred,
    constraint auth_group_permissions_group_id_permission_id_0cd325b0_uniq
        unique (group_id, permission_id)
);

create index if not exists auth_group_permissions_group_id_b120cbf9
    on auth_group_permissions (group_id);

create index if not exists auth_group_permissions_permission_id_84c5c92e
    on auth_group_permissions (permission_id);

create index if not exists auth_permission_content_type_id_2f476e4b
    on auth_permission (content_type_id);

create table if not exists auth_user
(
    id           integer generated always as identity
        constraint auth_user_pkey
            primary key,
    password     varchar(128)             not null,
    last_login   timestamp with time zone,
    is_superuser boolean                  not null,
    username     varchar(150)             not null
        constraint auth_user_username_key
            unique,
    first_name   varchar(150)             not null,
    last_name    varchar(150)             not null,
    email        varchar(254)             not null,
    is_staff     boolean                  not null,
    is_active    boolean                  not null,
    date_joined  timestamp with time zone not null
);

create index if not exists auth_user_username_6821ab7c_like
    on auth_user (username varchar_pattern_ops);

create table if not exists auth_user_groups
(
    id       bigint generated always as identity
        constraint auth_user_groups_pkey
            primary key,
    user_id  integer not null
        constraint auth_user_groups_user_id_6a12ed8b_fk_auth_user_id
            references auth_user
            deferrable initially deferred,
    group_id integer not null
        constraint auth_user_groups_group_id_97559544_fk_auth_group_id
            references auth_group
            deferrable initially deferred,
    constraint auth_user_groups_user_id_group_id_94350c0c_uniq
        unique (user_id, group_id)
);

create index if not exists auth_user_groups_group_id_97559544
    on auth_user_groups (group_id);

create index if not exists auth_user_groups_user_id_6a12ed8b
    on auth_user_groups (user_id);

create table if not exists auth_user_user_permissions
(
    id            bigint generated always as identity
        constraint auth_user_user_permissions_pkey
            primary key,
    user_id       integer not null
        constraint auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id
            references auth_user
            deferrable initially deferred,
    permission_id integer not null
        constraint auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm
            references auth_permission
            deferrable initially deferred,
    constraint auth_user_user_permissions_user_id_permission_id_14a6b632_uniq
        unique (user_id, permission_id)
);

create index if not exists auth_user_user_permissions_permission_id_1fbb5f2c
    on auth_user_user_permissions (permission_id);

create index if not exists auth_user_user_permissions_user_id_a95ead1b
    on auth_user_user_permissions (user_id);

create table if not exists batch
(
    batch_key         integer generated by default as identity
        constraint batch_key
            primary key,
    created_at        timestamp with time zone,
    updated_at        timestamp with time zone,
    text_planned      varchar,
    text_completed    varchar,
    status            varchar,
    batch_size        integer,
    project_key       integer,
    batch_invoice_key integer
);

create table if not exists batch_invoice
(
    batch_invoice_key  integer generated always as identity
        constraint batch_invoice_key
            primary key,
    amount_total       double precision,
    completed_at       timestamp with time zone,
    invoice_nr         varchar,
    invoice_unit_price double precision
);

create table if not exists contributions_website
(
);

create table if not exists country
(
    country_key integer not null
        constraint pr_countries_pkey
            primary key,
    alpha2      varchar,
    alpha3      varchar,
    name        varchar,
    image_small varchar
);

create table if not exists email_type
(
    email_type_key integer generated always as identity
        constraint email_type_pkey
            primary key,
    description    varchar(255) not null,
    text           varchar
);

create table if not exists email_sended
(
    email_sended_key bigint generated always as identity
        constraint email_sended_pkey
            primary key,
    sended_at        timestamp with time zone,
    email_type_key   integer
        constraint email_sended_email_type
            references email_type,
    orderline_key    bigint
);

create index if not exists fki_email_sended_email_type
    on email_sended (email_type_key);

create index if not exists fki_email_sended_orderline
    on email_sended (orderline_key);

create table if not exists log_job
(
    jobname       text,
    jobtype       text,
    jobfunction   text,
    startdatetime text,
    enddatetime   text,
    job_key       integer generated always as identity
);

create table if not exists log_zip_images
(
    batch_key       text,
    zipname         text,
    extractdatetime text,
    zip_key         integer generated always as identity
);

create table if not exists order_type
(
    order_type_key bigint not null
        constraint ordertype_key
            primary key,
    description    varchar,
    order_type     varchar(255),
    is_ext         bit
);

create table if not exists orderline_xxx_dump
(
    orderline_id                bigint not null,
    notes                       text,
    order_id                    bigint,
    product_id                  double precision,
    stripe_line_item_id         text,
    unit_reference_in_line_item text,
    quantity                    text,
    batch_id                    text,
    is_order_confirmation_sent  boolean,
    created_at                  timestamp with time zone,
    updated_at                  timestamp with time zone,
    amount                      text,
    currency                    text,
    checked_date                timestamp with time zone,
    is_ok                       bit,
    orderline_dump_key          bigint generated always as identity,
    payer_user_key              integer,
    user_name                   varchar,
    email                       varchar
);

create table if not exists "user"
(
    user_key               bigint generated always as identity
        constraint user_pkey
            primary key,
    user_name              varchar,
    email                  varchar(255)             not null,
    created_at             timestamp with time zone not null,
    updated_at             timestamp with time zone,
    website                varchar(255),
    profile_image          varchar(255),
    profile_text           varchar(255),
    user_type              varchar(255),
    user_id_ext            bigint
        constraint unique_user_id_django
            unique,
    country_key            integer,
    user_stripe_id         varchar,
    is_published           bit,
    webflow_id             varchar,
    published_at           timestamp with time zone,
    user_password          varchar,
    user_secret_code       varchar,
    user_twofactor_enabled boolean
);

create table if not exists "order"
(
    order_key               bigint generated always as identity
        constraint order_key
            primary key,
    order_id_ext            integer not null,
    created_at              timestamp with time zone,
    payment_method          "char",
    payer_user_key          bigint
        constraint order_payer
            references "user",
    order_date              timestamp with time zone,
    description             varchar(255),
    order_stripe_payment_id varchar(255),
    transaction_total       double precision,
    order_type_key          integer
        constraint order_order_type
            references order_type,
    transaction_fee         double precision,
    transaction_vat         double precision,
    currency                char(5),
    user_id_ext             integer
);

create table if not exists orderline_giftcard
(
    orderline_key           bigint generated always as identity
        constraint orderline_giftcard_key
            primary key,
    order_key               bigint
        constraint orderline_giftcard_order_v2
            references "order",
    order_id_ext            bigint                   not null,
    quantity                integer,
    notes                   text,
    created_at              timestamp with time zone not null,
    updated_at              timestamp with time zone not null,
    transaction_line_total  double precision,
    expirated_at            date,
    token                   varchar,
    orderline_stripe_id     varchar,
    order_stripe_payment_id varchar,
    orderline_id_ext        varchar,
    product_key             integer[],
    product_id_ext          varchar
);

create table if not exists product
(
    product_key       integer generated always as identity
        constraint product_pkey
            primary key,
    product_name      varchar,
    description       varchar,
    price             double precision,
    product_stripe_id varchar,
    web_flow_id       varchar,
    project_key       integer,
    product_type_key  integer,
    created_at        timestamp with time zone,
    updated_at        timestamp with time zone,
    product_id_ext    integer,
    is_active         boolean,
    project_type_key  integer
);

comment on column product.project_type_key is 'Ref to project type';

create table if not exists product_klaviyo
(
    product_klaviyo_key integer not null
        constraint product_klaviyo_pkey
            primary key,
    product_key         integer,
    project_key         integer,
    product_name        varchar,
    product_price       numeric,
    klaviyo_product_id  integer,
    image_url           varchar,
    product_url         varchar
);

create table if not exists product_type
(
    product_type_key  integer generated by default as identity
        constraint product_type_key
            primary key,
    product_type_name varchar,
    description       varchar,
    frequency         varchar,
    created_at        timestamp with time zone
);

create table if not exists project_price
(
    project_price_key integer generated always as identity
        constraint project_price_key
            primary key,
    project_key       integer,
    unit_price        double precision,
    unit_price_delta  double precision,
    created_at        timestamp with time zone,
    is_current        bit,
    project_price     double precision
);

create table if not exists project_type
(
    project_type_key integer generated always as identity
        constraint project_type_key
            primary key,
    description      varchar
);

create table if not exists xxx_loaddatetime
(
    test_key integer generated always as identity
        constraint tst_loaddatetime_pkey
            primary key,
    datetime timestamp
);

create table if not exists user_klaviyo
(
    user_klaviyo_key               integer generated always as identity
        constraint user_klaviyo_pkey
            primary key,
    user_key                       integer,
    klaviyo_id                     integer,
    user_name                      varchar,
    email                          varchar,
    personal_url                   varchar,
    first_purchase_date            timestamp with time zone,
    last_purchase_date             timestamp with time zone,
    mail_preferences               character varying[],
    interest_buckets               character varying[],
    bought_product_keys            integer[],
    active_sumting_club_membership integer[]
);

create table if not exists wallet
(
    wallet_key       bigint generated always as identity
        constraint wallet_key
            primary key,
    balance          double precision,
    created_at       timestamp with time zone,
    updated_at       timestamp with time zone,
    payer_user_key   integer
        constraint wallet_user
            references "user",
    total_orderlines integer,
    owner_user_key   integer
);

create table if not exists orderline_contribution
(
    orderline_key           bigint generated always as identity
        constraint orderline_key
            primary key,
    order_key               bigint
        constraint orderline_order_v2
            references "order",
    order_id_ext            bigint not null,
    orderline_id_ext        varchar(256),
    quantity                integer,
    notes                   text,
    transaction_line_total  double precision,
    product_key             integer,
    product_id_ext          varchar,
    owner_user_key          integer
        constraint orderline_okey
            references "user",
    wallet_key              integer
        constraint orderline_wallet_v2
            references wallet,
    proof_name              varchar,
    proof_date              timestamp with time zone,
    latitude                double precision,
    longitude               double precision,
    proof_small             varchar,
    proof_medium            varchar,
    proof_large             varchar,
    batch_key               integer
        constraint orderline_batch_v2
            references batch,
    proof_uploaded_datetime timestamp with time zone,
    transaction_line_fee    double precision,
    transaction_line_vat    double precision,
    loaded_at               timestamp with time zone,
    unit_ref_line_item      varchar,
    orderline_stripe_id     varchar,
    is_published            bit,
    update_at               timestamp with time zone,
    published_at            timestamp with time zone
);

create table if not exists orderline_wallet
(
    orderline_key          integer generated always as identity
        constraint orderline_wallet_club_key
            primary key,
    order_key              bigint
        constraint orderline_wallet_club_order_v2
            references "order",
    order_id_ext           bigint                   not null,
    orderline_id_ext       varchar(256),
    notes                  text,
    created_at             timestamp with time zone not null,
    updated_at             timestamp with time zone not null,
    transaction_line_total double precision,
    wallet_key             bigint                   not null
        constraint orderline_wallet_club_wallet_v2
            references wallet,
    wallet_is_updated      bit,
    orderline_stripe_id    varchar,
    product_key            integer,
    product_id_ext         varchar
);

create table if not exists zip_batches
(
    batch_key       text,
    zipname         text,
    extractdatetime timestamp
);

create table if not exists zip_images
(
    filename     text,
    batch_key    integer,
    filedatetime timestamp,
    latitude     double precision,
    longitude    double precision,
    url          text
);

create table if not exists partner
(
    partner_key integer generated always as identity
        constraint partner_pkey
            primary key,
    name        varchar,
    description varchar,
    created_at  timestamp with time zone,
    updated_at  timestamp with time zone,
    country     char(50),
    address     varchar,
    email       varchar,
    zipcode     varchar
);

create table if not exists project
(
    project_key          integer generated always as identity
        constraint project_pkey
            primary key,
    description          varchar(255),
    description_long     varchar,
    created_at           timestamp with time zone,
    updated_at           timestamp with time zone,
    latitude             double precision,
    longitude            double precision,
    name                 varchar,
    project_image_medium "char",
    partner_key          integer
        constraint project_partner
            references partner,
    project_type_key     integer,
    batch_size_default   integer
);

