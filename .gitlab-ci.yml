# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - maven.repository/
    - target/
    - build/
variables:
  JDK_IMAGE: maven:3.8.3-openjdk-17-slim


stages:
  - test
  - package
  - deploy
  - build

#Backend
backend-build:
  image: $JDK_IMAGE
  stage: build
  environment: production
  tags:
    - hva
  script:
    - echo "started building"
    - cd Backend
    - mvn clean install
  artifacts:
    paths:
      - build/Backend.jar
  only:
    - main
backend-test:
  image: $JDK_IMAGE
  stage: test
  tags:
    - hva
  only:
    - main
  script:
      - cd Backend #first cd into the backend folder
      - mvn $MAVEN_CLI_OPTS clean test -P unit-test


##Frontend
frontend-build:
  image: node:latest
  stage: build
  script:
    -  cd  frontend
     - npm install --progress=false
     - npm run build
  artifacts:
     paths:
       - build/frontend

frontend-test:
  image: node:16.17.0
  stage: test
  script:
    - npm install --progress=false
    - npm run unit

##Deploy to server
deploy:
  image: ubuntu:latest
  stage: deploy
  rules: 
    - if: '$CI_COMMIT_TAG'
  tags:
    - hva
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - pwd
    - ssh root@$SERVER "cd sum-1; git pull origin main; cd Backend; mvn dependency:go-offline; mvn spring-boot:run"