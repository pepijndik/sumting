# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
stages:
  - build
  - test
  - deploy
  - docker

cache:
  paths:
    - frontend/node_modules/
    - Backend/target/
variables:
  DOCKER_DRIVER: overlay
  JDK_IMAGE: maven:3-openjdk-18


#Backend
build:backend:
  image: $JDK_IMAGE
  stage: build
  environment: production
  tags:
    - hva
  script:
    - echo "started building"
    - cd Backend
    - mvn clean package -Dmaven.test.skip=true
    - echo "Finished building"
    - ls -la
  artifacts:
    paths:
      - Backend/target/*.jar
  only:
    - main

test:backend:
  image: $JDK_IMAGE
  stage: test
  tags:
    - hva
  needs:
    - job: build:backend
  script:
      - cd Backend #first cd into the backend folder
      - mvn $MAVEN_CLI_OPTS clean test -P unit-test

##Frontend
build:frontend:
  image: node:latest
  tags:
    - hva
  stage: build
  script:
     - cd frontend
     - npm install --progress=false
     - npm run build
  artifacts:
     paths:
       - dist

test:frontend:
  image: node:latest
  stage: test
  tags:
    - hva
  script:
    - cd frontend
    - npm install --progress=false
  needs:
    - job: build:frontend

docker:build:

  environment: production
  image: creatiwww/docker-compose:latest
  services:
    - docker:dind
  stage: docker
  before_script:
    - docker info
    - docker-compose --version
  needs:
    - job: build:backend
    - job: build:frontend
    - job: test:frontend
    - job: test:backend
  tags:
    - hva
  script:
    - echo "Building docker image"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD gitlab.fdmci.hva.nl:5050/se-ewa/2022-2023-1/sum-1
    - docker-compose build
    - docker-compose push
    - echo "Images builded"
  only:
    - main


##Deploy to Prod server
deploy:prod:
  environment: production
  image: creatiwww/docker-compose:latest
  services:
    - docker:dind
  stage: deploy
  needs:
    - job: build:backend
    - job: build:frontend
    - job: test:frontend
    - job: test:backend
  rules:
    - if: $CI_COMMIT_TAG
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    name: 'Sumting Admin panel Release'
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
  tags:
    - hva
  before_script:
    - echo "Deploying!"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  script:
    - docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY_PASSWORD gitlab.fdmci.hva.nl:5050/se-ewa/2022-2023-1/sum-1
    - docker-compose -H "ssh://admin@$SERVER" down --remove-orphans
    - docker-compose -H "ssh://admin@$SERVER" pull
    - docker-compose -H "ssh://admin@$SERVER" up -d
    - echo "Deployed!"
